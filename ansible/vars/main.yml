---
# General
github_user: "yuvashankar"
automation_user: "yuvashankar"
automation_group: "sudo"

# geerlingguy.security
security_ssh_allowed_groups: ["sudo"]
security_sudoers_passwordless: ["{{ automation_user }}"]
security_autoupdate_mail_to: "vinay@yuvashankar.net"
security_autoupdate_mail_on_error: false

# Networking
wifi_network_block: "192.168.4.0/24"
network_interface:
  eth: "eno1"
  static_address: "192.168.2.2"
  netmask: "255.255.255.0"
  network: "192.168.2.0"
  broadcast: "192.168.2.255"
  gateway: "192.168.2.1"

# File Share
samba_host: "192.168.2.3"
app_folder: "/mnt"
folders_to_mount:
  - docker
  - TV_Shows
  - Movies
  - Downloads
  - Music
samba_username: "sambauser"
samba_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  31363437303635646430303630666666326238633038643437346533626638313861616661623366
  3361363035663733363934323530666633656335653438650a353130646537323465313230633465
  62353061666234613938373564646334643833396235613464386334336239303933393261623261
  3563373930396464620a646363313539346637633137613631633037643930393866376563303233
  34613966626639653366626161663831376330326635333833303963313236323762346164373937
  3435373539386538386264613532393461396264613331646561

# Docker
docker_install_compose: true
docker_users:
  - "{{ automation_user }}"
docker_daemon_options:
  log-opts:
    max-size: "100m"

# docker_compose
nas_home_directory: "/volume1"
docker_systemd_dir: /etc/systemd/docker
docker_services_per_host:
  storage_server:
    docker_file_path: "{{ nas_home_directory }}/docker/docker-compose2.yaml" # Debug
    docker_user: "{{ samba_username }}"
    docker_group: "users"
  media_server:
    docker_file_path: "{{ docker_systemd_dir }}"
    docker_user: "{{ automation_user }}"
    docker_group: "docker"

## media_services
# Useful folder enndpoints
docker_folder: "{{ app_folder }}/docker"
nas_docker_user_id: 1029 ## Shitty hack because we can't determine user ids or group ids on Synology
nas_docker_user_group: 100 ## Running docker containers on Synology is a pain.
nas_docker_services:
  services:
    bazarr:
      image: lscr.io/linuxserver/bazarr:latest
      container_name: bazarr
      restart: unless-stopped
      environment:
        PUID: "{{ nas_docker_user_id }}"
        PGID: "{{ nas_docker_user_group }}"
        TZ: America/Montreal
      volumes:
        - "{{ nas_home_directory }}/docker/Bazarr:/config"
        - "{{ nas_home_directory }}/TV_Shows:/tv"
        - "{{ nas_home_directory}}/Movies:/movies"
      ports:
        - 6767:6767
    prowlarr:
      image: lscr.io/linuxserver/prowlarr:latest
      container_name: prowlarr
      restart: unless-stopped
      environment:
        PUID: "{{ nas_docker_user_id }}"
        PGID: "{{ nas_docker_user_group }}"
        TZ: America/Montreal
      volumes:
        - "{{ nas_home_directory }}/docker/Prowlarr:/config"
      ports:
        - 9696:9696
    sonarr:
      image: lscr.io/linuxserver/sonarr:latest
      container_name: sonarr
      restart: unless-stopped
      environment:
        PUID: "{{ nas_docker_user_id }}"
        PGID: "{{ nas_docker_user_group }}"
        TZ: America/Montreal
      volumes:
        - "{{ nas_home_directory }}/docker/Sonarr:/config"
        - "{{ nas_home_directory }}/TV_Shows:/tv"
        - "{{ nas_home_directory }}/Downloads:/downloads"
      ports:
        - 8989:8989
    radarr:
      image: lscr.io/linuxserver/radarr:latest
      container_name: radarr
      restart: unless-stopped
      environment:
        PUID: "{{ nas_docker_user_id }}"
        PGID: "{{ nas_docker_user_group }}"
        TZ: America/Montreal
      volumes:
        # For nonsense reasons, Radarr doesn't support remotely mounted dtatabses, even though Sonarr does.
        # For future reference: https://github.com/Radarr/Radarr/issues/7269
        - "{{ nas_home_directory }}/docker/Radarr:/config"
        - "{{ nas_home_directory }}/Movies:/movies"
        - "{{ nas_home_directory }}/Downloads/:/downloads"
      ports:
        - 7878:7878
    lidarr:
      image: lscr.io/linuxserver/lidarr:latest
      container_name: lidarr
      restart: unless-stopped
      environment:
        PUID: "{{ nas_docker_user_id }}"
        PGID: "{{ nas_docker_user_group }}"
        TZ: America/Montreal
      volumes:
        - "{{ nas_home_directory }}/docker/Lidarr:/config"
        - "{{ nas_home_directory }}/Music:/music"
        - "{{ nas_home_directory }}/Downloads:/downloads"
      ports:
        - 8686:8686

docker_extras:
docker_services:
  services:
    transmission:
      image: lscr.io/linuxserver/transmission:latest
      container_name: transmission
      environment:
        PUID: "{{ automation_user_id }}"
        PGID: "{{ docker_group_id }}"
        TZ: America/Montreal
      volumes:
        - "{{ docker_folder }}/Transmission/config:/config"
        - "{{ docker_folder }}/Transmission/watch:/watch"
        - "{{ app_folder }}/Downloads:/downloads"
      ports:
        - 9091:9091
        - 51413:51413
        - 51413:51413/udp
    tautulli:
      image: lscr.io/linuxserver/tautulli:latest
      container_name: tautulli
      volumes:
        - "/home/{{ automation_user }}/docker/Tautulli:/config"
      environment:
        PUID: "{{ automation_user_id }}"
        PGID: "{{ docker_group_id }}"
        TZ: America/Montreal
      ports:
        - 8181:8181
    #
    jellyfin:
      image: jellyfin/jellyfin:latest
      container_name: jellyfin
      network_mode: "host"
      environment:
        PUID: "{{ automation_user_id }}"
        PGID: "{{ docker_group_id }}"
        TZ: America/Montreal
      volumes:
        - "/home/{{ automation_user }}/docker/Jellyfin:/config"
        - "{{ docker_folder }}/Cache/:/cache"
        - "{{ app_folder }}/Music:/music"
        - "{{ app_folder }}/Movies:/movies"
        - "{{ app_folder }}/TV_Shows:/tv"
      ports:
        - 8096:8096/tcp
        - 8920:8920/tcp
        - 1900:1900/udp
        - 7359:7359/udp
